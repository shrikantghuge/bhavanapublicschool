package com.zensar.shrikantexamsystem.zenemsservices;
import java.util.List;
import com.zensar.shrikantexamsystem.beans.Exam;
import com.zensar.shrikantexamsystem.beans.Question;
import com.zensar.shrikantexamsystem.beans.Section;
import com.zensar.shrikantexamsystem.beans.Trainee;
import com.zensar.shrikantexamsystem.beans.Trainer;
import com.zensar.shrikantexamsystem.exceptions.ExamAlreadyPresentException;
import com.zensar.shrikantexamsystem.exceptions.ExamNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.InvalidPasswordException;
import com.zensar.shrikantexamsystem.exceptions.QuestionsNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.SectionAlreadyPresentException;
import com.zensar.shrikantexamsystem.exceptions.SectionNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.ServicesNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.StudentsNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.TraineeNotFoundException;
import com.zensar.shrikantexamsystem.exceptions.TrainerNotFoundException;
public interface ExamServices {
	public boolean acceptTrainer(Trainer trainer) throws ServicesNotFoundException;
	public boolean acceptExam(Exam exam) throws  ServicesNotFoundException,TrainerNotFoundException,ExamAlreadyPresentException;
	public boolean acceptSection(Exam exam,Section section) throws ExamNotFoundException,SectionAlreadyPresentException;
	public List<Exam> getAllExamDetails()throws ServicesNotFoundException;
	public Exam getExamDetails(Exam exam) throws ExamNotFoundException,ServicesNotFoundException;
	public List<Section> getAllSections(Exam exam) throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException;
	public List<Trainee> getAllTrainees(Exam exam) throws ExamNotFoundException,ServicesNotFoundException,TraineeNotFoundException;
	public List<Question> getAllQuestions(Exam exam,Section section) throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException,QuestionsNotFoundException;
	public boolean removeExam(Exam exam) throws ExamNotFoundException,ServicesNotFoundException;
	public boolean removeSection(Exam exam,Section section) throws ExamNotFoundException,SectionNotFoundException,ServicesNotFoundException;
	public boolean removeStudents(Exam exam) throws ExamNotFoundException,StudentsNotFoundException, ServicesNotFoundException;
	public boolean removeQuestion(Exam exam,Section section)  throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException;
	public boolean updateExam(Exam exam) throws  ExamNotFoundException,ServicesNotFoundException;
	public boolean updateSection(Exam exam,Section section) throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException;
	public boolean updateStudentList(Exam exam) throws ExamNotFoundException,ServicesNotFoundException;
	public boolean updateQuestionList(Exam exam,Section section) throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException;
	public Trainee getTraineeDetails(int traineeId,int traineePassword) throws TraineeNotFoundException,ServicesNotFoundException;
	public boolean getTrainerLoginDetails(Trainer trainer) throws TrainerNotFoundException,InvalidPasswordException,ServicesNotFoundException;
	public boolean getTraineeLoginDetails(int examId,Trainee trainee) throws TraineeNotFoundException,InvalidPasswordException ,ServicesNotFoundException;
	public boolean giveExam(Trainee trainee,Exam exam,Section section,List<Question> userPaper) throws ExamNotFoundException,ServicesNotFoundException,SectionNotFoundException,QuestionsNotFoundException;
}
